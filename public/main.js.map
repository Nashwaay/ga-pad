{"version":3,"sources":["./src/app/shared/enums/drawing-modes.ts","./src/app/shared/enums/text-modes.ts","./src/app/shared/enums/export-modes.ts","./src/app/shared/enums/backgrounds.ts","./src/app/shared/enums/animated-modes.ts","./src/app/shared/enums/text-align-modes.ts","./src/app/shared/enums/filter-types.ts","./src/app/shared/enums/fonts.enum.ts","./src/app/shared/enums/language-support.ts","./src/app/modules/sketch-pad/sketch-pad.component.html","./src/app/app-routing.module.ts","./src/app/modules/sketch-pad/sketch-pad.component.ts","./src/app/shared/components/page-not-found/page-not-found.component.ts","./src/app/shared/components/page-not-found/page-not-found.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":["DrawingModes","TextModes","ExportModes","Background","AnimatedModes","TextAlignModes","FilterTypes","FontTypes","LanguageSupport","routes","path","redirectTo","pathMatch","component","SketchPadComponent","FONT_SIZE","activeTab","isCollapsed","strokeColor","secondaryColor","fonts","DEFAULT","ARIAL","NASTALEEQ","LATEEF","ROBOTO_THIN","ROBOTO_MEDIUM","ROBOTO_BLACK","colors","languageSupport","URDU","ENGLISH","exportModes","JPEG","PNG","backgroundModess","filters","INVERT","GRAY","ERODE","THRESHOLD","BLUR","DILATE","POSTERIZE","OPAQUE","CLEAR","modes","type","CIRCLE_MODE","text","BRUSH_MODE","TEXT_BRUSH","GRADIENT_LINE","BEADS","textModes","ROTATE_FILL","HEADING_STYLE","STEERING","backgrounds","CIRCLE","STRIPES","LINES","GRID_CIRCLE","SOLID_FILL","GRADIENT","INPUT_IMAGE","animations","SQUARE","SPIRAL","textAlignModes","LEFT","icon","CENTER","RIGHT","angle","offset","scalar","speed","col","r","g","b","this","showNewOptions","showKeyboard","CANVAS_HEIGHT","CANVAS_WIDTH","inputText","sizePicker","selectedLanguage","selectedTextAlign","imagePath","shareUrl","newSketch","document","getElementById","style","width","marginLeft","canvas","s","preload","activeFont","arial","loadFont","nastaleeq","robotoBlack","robotoMed","robotoThin","lateef","setup","defaultFont","textFont","createCanvas","createLayers","createFilePicker","rect","height","stroke","draw","sketch","colorRange","activeMode","steeringText","brushDrawing","circleDrawing","textBrush","makeGradientLine","beads","clearBrushLayer","rotateText","heading","GENERATIVE","generativeLetter","MOVE","moveText","clearText","gradientBackground","fillBackground","circleBackground","stripesBackground","circlesGridBackground","linesBackground","showFilepicker","clearBackground","setFilter","clearFilter","animateSquare","spiral","clearAnimation","generateRunwayImage","lineWidth","animatedLayer","random","squareSize","rectMode","strokeWeight","fill","square","image","hex","replace","bigint","parseInt","x","cos","y","sin","urduText","value","textSize","clear","backgroundLayer","handleFile","brushLayer","textLayer","model","url","token","z","i","Math","query","then","outputs","generatedImgBase64","img","loadImage","setTimeout","background","info","console","log","createElement","src","window","location","reload","parent","createGraphics","filterLayer","mouseIsPressed","mouseButton","line","mouseX","mouseY","pmouseX","pmouseY","updateLayers","abs","ellipse","split","distance","noStroke","length","gradientLine","x1","y1","x2","y2","sz","d","dist","step","map","lerp","c","lerpColor","from","to","circle","randomColor","getRandomColor","color","colorMode","RGB","interA","interB","noFill","inter","font","reversedUrdu","reverseString","setFont","push","translate","rotate","PI","pop","str","reverse","join","textAlign","points","textToPoints","sampleFactor","pt","language","display","align","pathSampleFactor","pow","ribbonWidth","letters","density","beginShape","pos","nextPos","p0","createVector","p1","v","sub","normalize","HALF_PI","mult","pneu","add","curveVertex","endShape","CLOSE","fileInput","createFileInput","$event","show","position","windowWidth","hide","file","data","mode","save","resetSpiralValues","hideFilepicker","media","navUrl","searchParams","URLSearchParams","set","open","remove","filter","closeNav","shareImage","openNav","PageNotFoundComponent","AppRoutingModule","forRoot","AppComponent","title","AppModule","bootstrapModule","catch","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main.js","sourcesContent":["export enum DrawingModes{\r\n    BRUSH_MODE = 'brush',\r\n    INTERACTIVE = 'interactive',\r\n    TEXT_BRUSH = 'text brush',\r\n    CIRCLE_MODE = 'circle',\r\n    HOOK_BRUSH = 'force brush',\r\n    CLEAR = 'ClearBrush',\r\n    GRADIENT_LINE = 'gradient line',\r\n    BEADS = 'beads'\r\n}\r\n\r\nexport enum OtherModes{\r\n    NOISE = 'noise',\r\n    GAN = 'GAN'\r\n}","export enum TextModes{\r\n    ROTATE_FILL = 'Background',\r\n    HEADING_STYLE = 'Heading',\r\n    GENERATIVE = 'generative',\r\n    CLEAR = 'ClearText',\r\n    STEERING = 'Steering',\r\n    MOVE = 'MoveText'\r\n}","export enum ExportModes{\r\n    JPEG = '.jpg',\r\n    PNG = '.png',\r\n    GIF = '.gif'\r\n}","export enum Background{\r\n    STRIPES = 'stripes',\r\n    CIRCLE = 'circle-bg',\r\n    CLEAR = 'clear-bg',\r\n    SPECTRUM = 'spectrum',\r\n    LINES = 'lines',\r\n    GRID_CIRCLE = 'grid-circle',\r\n    INPUT_IMAGE = 'browse-image',\r\n    SOLID_FILL = 'solid-fill',\r\n    GRADIENT = 'gradient'\r\n}","export enum AnimatedModes{\r\n    SQUARE = 'square',\r\n    BEIZER_CURVE = 'Beizer',\r\n    SHADER = 'Shader',\r\n    SPIRAL = 'Spiral',\r\n    CLEAR = 'ClearAnimation'\r\n}","export enum TextAlignModes{\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT',\r\n    CENTER = 'CENTER',\r\n    BOTTOM = 'BOTTOM',\r\n    TOP = 'TOP',\r\n    BASELINE = 'BASELINE'\r\n};","export enum FilterTypes{\r\n    INVERT = 'INVERT',\r\n    GRAY = 'GRAY',\r\n    OPAQUE = 'OPAQUE',\r\n    POSTERIZE = 'POSTERIZE',\r\n    BLUR = 'BLUR',\r\n    ERODE = 'ERODE',\r\n    DILATE = 'DILATE',\r\n    THRESHOLD = 'THRESHOLD',\r\n    CLEAR = 'Clear Filter'\r\n}","export enum FontTypes{\r\n    DEFAULT = 'Default',\r\n    ARIAL = 'Arial',\r\n    NASTALEEQ = 'Nastaleeq',\r\n    LATEEF = 'Lateef',\r\n    ROBOTO_THIN = 'Roboto Thin',\r\n    ROBOTO_MEDIUM = 'Roboto Medium',\r\n    ROBOTO_BLACK = 'Roboto Black',\r\n}","export enum LanguageSupport{\r\n    URDU = 'urdu',\r\n    ENGLISH = 'english'\r\n}","<div id=\"sidebar-nav\" class=\"sidebar\">\n  <a href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"closeNav()\">&times;</a>\n  <br>\n  <div class=\"left-panel-inner\">\n    <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"activeTab\" class=\"nav-tabs left-panel-nav-tabs\">\n      <li [ngbNavItem]=\"1\">\n        <a ngbNavLink><i class=\"fa fa-file\"></i></a>\n        <ng-template ngbNavContent>\n          <div class=\"px-3 pt-4\">\n            <h5>New Design</h5>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                Width: <input class=\"form-control form-control-sm\" [(ngModel)]=\"CANVAS_WIDTH\" type=\"number\"\n                  placeholder=\"Enter width in px\" />\n                Height: <input class=\"form-control form-control-sm\" [(ngModel)]=\"CANVAS_HEIGHT\" type=\"number\"\n                  placeholder=\"Enter height in px\" /></div>\n              <div class=\"col-6\">\n                <br>\n                <button class=\"w-100 ml-1 btn btn-secondary\" (click)=\"onNewDesignClick()\">New Custom</button>\n                <br>\n                <button class=\"w-100 ml-1 mt-1 btn btn-secondary\" (click)=\"onNewDesignClick('A4')\">A4</button>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </li>\n\n      <span _ngcontent-iuw-c101=\"\" class=\"vl\"></span>\n      <li [ngbNavItem]=\"2\">\n        <a ngbNavLink><i class=\"fa fa-text-width\"></i></a>\n        <ng-template ngbNavContent>\n          <div class=\"px-3 pt-4\">\n            <h5>Choose Text & Style</h5>\n            <div class=\"row\">\n              <div class=\"form-check col-6\" *ngFor=\"let language of languageSupport; let i = index\">\n                <input class=\"form-group\" type=\"radio\" name=\"flexRadioDefault\" [id]=\"language+i\"\n                  (change)=\"onLanguageClick(language)\" [checked]=\"selectedLanguage===language\">\n                <label class=\"form-group\" [for]=\"language+i\">\n                  {{language | titlecase}}\n                </label>\n              </div>\n              <a class=\"btn btn-link btn-sm\" style=\"font-size: 12px;\" (click)=\"showKeyboard = true\"\n                target=\"_blank\">View Urdu Keyboard Layout</a>\n              <div class=\"col-12\">\n                <input class=\"form-group w-100 mb-1\" [(ngModel)]=\"inputText\" id=\"text\"\n                  placeholder=\"Enter english text..\" />\n              </div>\n              <div class=\"col-6\" *ngFor=\"let text of textModes\" [ngClass]=\"{'active': activeMode===text.type}\"\n                (click)=\"setActiveMode(text.type)\">\n                <button class=\"btn btn-outline-dark w-100 ml-1 mb-1\">{{text.text}}\n                </button>\n              </div>\n              <select [(ngModel)]=\"activeFont\">\n                <option *ngFor=\"let font of fonts\" [value]=\"font\">{{font}}</option>\n              </select>\n            </div>\n          </div>\n        </ng-template>\n      </li>\n      <span _ngcontent-iuw-c101=\"\" class=\"vl\"></span>\n\n      <li [ngbNavItem]=\"3\">\n        <a ngbNavLink><i class=\"fa fa-image\"></i></a>\n        <ng-template ngbNavContent>\n          <div class=\"px-3 pt-4\">\n            <h5>Choose Background Style</h5>\n            <div class=\"row color-blue-gray\">\n              <ng-container *ngFor=\"let background of backgrounds\">\n                <div class=\"col-6\">\n                  <button class=\"btn btn-outline-dark w-100 ml-1 mb-1\"\n                    [ngClass]=\"{'active': activeMode===background.type}\"\n                    (click)=\"setActiveMode(background.type, $event)\">\n                    {{background.text}}\n                  </button>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n          <hr>\n        </ng-template>\n      </li>\n\n      <li [ngbNavItem]=\"4\">\n        <a ngbNavLink><i class=\"fa fa-paint-brush\"></i></a>\n        <ng-template ngbNavContent>\n          <div class=\"px-3 pt-4\">\n            <h5>Choose Brush Style</h5>\n            <div class=\"row\">\n              <div class=\"col-6\" *ngFor=\"let mode of modes\">\n                <button class=\"btn btn-outline-dark w-100 ml-1 mb-1\" [ngClass]=\"{'active': activeMode===mode.type}\"\n                  (click)=\"setActiveMode(mode.type)\">{{mode.text}}</button>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </li>\n\n      <span _ngcontent-iuw-c101=\"\" class=\"vl\"></span>\n\n      <li [ngbNavItem]=\"5\">\n        <a ngbNavLink><i class=\"fa fa-filter\"></i></a>\n        <ng-template ngbNavContent>\n          <div class=\"px-3 pt-4\">\n            <!-- <h2>Generate landscape image</h2>\n              <div class=\"row color-blue-gray\">\n                <div class=\"col-3 ml-2 btn btn-outline-primary\" (click)=\"setActiveMode('GAN')\">\n                  Generate\n                </div>\n              </div> -->\n            <h5>Choose Filter</h5>\n            <div class=\"row color-blue-gray\">\n              <div class=\"col-6\" *ngFor=\"let filter of filters\">\n                <button class=\"btn btn-outline-dark w-100 ml-1 mb-1\" [ngClass]=\"{'active': activeMode===filter}\"\n                  (click)=\"setActiveMode(filter)\">\n                  {{filter | titlecase}}\n                </button>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </li>\n\n      <li [ngbNavItem]=\"6\">\n        <a ngbNavLink><i class=\"fas fa-spinner fa-spin\"></i></a>\n        <ng-template ngbNavContent>\n          <div class=\"px-3 pt-4\">\n            <!-- <h2>Generate landscape image</h2>\n              <div class=\"row color-blue-gray\">\n                <div class=\"col-3 ml-2 btn btn-outline-primary\" (click)=\"setActiveMode('GAN')\">\n                  Generate\n                </div>\n              </div> -->\n            <h5>Choose Animation</h5>\n            <div class=\"row color-blue-gray\">\n              <div class=\"col-6\" *ngFor=\"let type of animations\">\n                <button class=\"btn btn-outline-dark w-100 ml-1 mb-1\" [ngClass]=\"{'active': activeMode===type.type}\"\n                  (click)=\"setActiveMode(type.type)\">\n                  {{type.text | titlecase}}\n                </button>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </li>\n    </ul>\n    <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n  </div>\n  <div class=\"px-3 py-2\">\n    <div class=\"row\">\n      <div class=\"col-6\" id=\"options\">\n        <label>Primary Color: </label><input type=\"color\" [(ngModel)]=\"strokeColor\" />\n        <label>Secondary Color: </label><input type=\"color\" [(ngModel)]=\"secondaryColor\" />\n      </div>\n      <div class=\"col-6\">\n        <label>Size: {{sizePicker}}px</label>\n        <input type=\"range\" [(ngModel)]=\"sizePicker\" />\n      </div>\n    </div>\n    <div class=\"row\">\n      <h5>Download as </h5>\n      <div *ngFor=\"let mode of exportModes\" class=\"col-6\">\n        <button class=\"btn btn-secondary w-100 ml-1\" (click)=\"saveImage(mode)\">{{mode\n          | uppercase}}</button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <h5>Share </h5>\n      <div class=\"col-6\">\n        <button class=\"btn btn-link w-100 ml-1 \" style=\"color: black;\" (click)=\"shareImage()\"><i\n            class=\"fa fa-facebook-f\"></i></button>\n      </div>\n      <div class=\"col-6\">\n        <button class=\"btn btn-link w-100 ml-1\" style=\"color: black;\" (click)=\"shareImage('twitter')\"><i\n            class=\"fa fa-twitter\"></i></button>\n      </div>\n    </div>\n  </div>\n</div>\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <button class=\"openbtn btn-light\" (click)=\"openNav()\">&#9776;</button>\n  <a class=\"navbar-brand\" style=\"float: right;\" href=\"#\">Generative Art Pad</a>\n  <!-- <p>&#1557;&#1557;</p> -->\n</nav>\n<div id=\"main\">\n  <div class=\"row\">\n    <div class=\"row\" *ngIf=\"showKeyboard\">\n      <div class=\"col-6\"><img src=\"./../../../assets/images/keyboard_a.PNG\" /></div>\n      <a class=\"btn btn-link btn-sm\"  href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"showKeyboard = false\">&times;</a>\n      <div class=\"col-6\"><img src=\"./../../../assets/images/keyboard_c.PNG\" /></div>\n    </div>\n    <div class=\"col-3\"></div>\n    <div class=\"col-9 float-right mt-4\">\n      <div class=\"sketch-container\">\n        <div id=\"sketch-holder\"></div>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SketchPadComponent } from './modules/sketch-pad/sketch-pad.component';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sketch', pathMatch: 'full' },\n  { path: 'sketch', component: SketchPadComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as p5 from 'p5';\n\nimport { HostedModel } from '@runwayml/hosted-models';\nimport { DrawingModes, OtherModes } from './../../shared/enums/drawing-modes';\nimport { TextModes } from './../../shared/enums/text-modes';\nimport { ExportModes } from './../../shared/enums/export-modes';\nimport { Background } from './../../shared/enums/backgrounds';\nimport { AnimatedModes } from './../../shared/enums/animated-modes';\nimport { TextAlignModes } from './../../shared/enums/text-align-modes';\nimport { FilterTypes } from './../../shared/enums/filter-types';\nimport { FontTypes } from './../../shared/enums/fonts.enum';\nimport { LanguageSupport } from './../../shared/enums/language-support';\n\n@Component({\n  selector: 'app-sketch-pad',\n  templateUrl: './sketch-pad.component.html',\n  styleUrls: ['./sketch-pad.component.scss']\n})\nexport class SketchPadComponent implements OnInit {\n  CANVAS_WIDTH; CANVAS_HEIGHT;\n  FONT_SIZE: number = 30;\n  activeTab: number = 1;\n  public isCollapsed = false;\n  strokeColor: any = 1;\n  secondaryColor: any = 1;\n  canvas: any;\n\n  generatedImgBase64: string;\n\n  /* fonts */\n  readonly fonts: Array<FontTypes> = [\n    FontTypes.DEFAULT, FontTypes.ARIAL, FontTypes.NASTALEEQ, FontTypes.LATEEF, FontTypes.ROBOTO_THIN, FontTypes.ROBOTO_MEDIUM, FontTypes.ROBOTO_BLACK\n  ]\n  arial; nastaleeq; robotoThin; robotoMed; robotoBlack; lateef;\n  activeFont: FontTypes;\n  defaultFont;\n\n  p0; p1; p2; p3;\n  stepX; stepY;\n  colors = {} as { from: any, to: any, interA: any, interB: any };\n  sizePicker: any;\n  textLayer: any;\n  brushLayer: any;\n  filterLayer: any;\n  animatedLayer: any;\n  backgroundLayer: any;\n  inputText: string;\n  imagePath: string;\n\n  readonly languageSupport = [LanguageSupport.URDU, LanguageSupport.ENGLISH];\n  readonly exportModes = [ExportModes.JPEG, ExportModes.PNG];\n  readonly backgroundModess = Background;\n\n  selectedLanguage: LanguageSupport;\n  activeMode: DrawingModes | TextModes | Background | 'GAN' | FilterTypes | OtherModes | AnimatedModes;\n\n  shareUrl: string;\n\n  readonly filters = [\n    FilterTypes.INVERT,\n    FilterTypes.GRAY,\n    FilterTypes.ERODE,\n    FilterTypes.THRESHOLD,\n    FilterTypes.BLUR,\n    FilterTypes.DILATE,\n    FilterTypes.POSTERIZE,\n    FilterTypes.OPAQUE,\n    FilterTypes.CLEAR\n    // OtherModes.NOISE\n  ]\n\n  readonly modes = [\n    { type: DrawingModes.CIRCLE_MODE, text: 'Circle' },\n    { type: DrawingModes.BRUSH_MODE, text: 'Brush' },\n    { type: DrawingModes.TEXT_BRUSH, text: 'Text Brush' },\n    { type: DrawingModes.GRADIENT_LINE, text: 'Gradient Line' },\n    { type: DrawingModes.BEADS, text: 'Beads Brush' },\n    { type: DrawingModes.CLEAR, text: 'Clear Brush' },\n  ];\n\n  readonly textModes = [\n    { type: TextModes.ROTATE_FILL, text: 'Rotated Letters' },\n    { type: TextModes.HEADING_STYLE, text: 'Heading' },\n    // { type: TextModes.GENERATIVE, text: 'Generative' },\n    { type: TextModes.STEERING, text: 'Steering Letters' },\n    { type: TextModes.CLEAR, text: 'Clear Text' },\n  ];\n\n  readonly backgrounds = [\n    { type: Background.CIRCLE, text: 'Circles & Text' },\n    { type: Background.STRIPES, text: 'Stripes' },\n    { type: Background.LINES, text: 'Lines' },\n    { type: Background.GRID_CIRCLE, text: 'Grid Pattern' },\n    { type: Background.SOLID_FILL, text: 'Solid Fill' },\n    { type: Background.GRADIENT, text: 'Gradient' },\n    { type: Background.INPUT_IMAGE, text: 'Browse Image' },\n    { type: Background.CLEAR, text: 'Clear' },\n  ];\n\n\n  readonly animations = [\n    { type: AnimatedModes.SQUARE, text: 'Square' },\n    { type: AnimatedModes.SPIRAL, text: 'Spiral' },\n    { type: AnimatedModes.CLEAR, text: 'Clear' },\n  ];\n\n  readonly textAlignModes = [\n    { type: TextAlignModes.LEFT, icon: '' },\n    { type: TextAlignModes.CENTER, icon: '' },\n    { type: TextAlignModes.RIGHT, icon: '' },\n  ];\n  selectedTextAlign: TextAlignModes;\n\n  filterImage;\n  fileInput;\n  sketch;\n  showNewOptions: boolean;\n  showKeyboard: boolean;\n\n\n  angle = 2.0;\n  offset = 300;\n  scalar = 3.5;\n  speed = 0.1;\n  col = {\n    r: 255,\n    g: 0,\n    b: 0\n  };\n\n  constructor(\n  ) {\n    this.showNewOptions = false;\n    this.showKeyboard = false;\n    this.CANVAS_HEIGHT = 600; this.CANVAS_WIDTH = 600;\n    this.inputText = '';\n    this.sizePicker = 10;\n    this.strokeColor = '#000000'\n    this.secondaryColor = '#000000'\n    this.selectedLanguage = LanguageSupport.URDU;\n    this.selectedTextAlign = TextAlignModes.CENTER;\n    this.imagePath = 'assets/images/12.png';\n    this.shareUrl = 'https://ga-pad.web.app/';\n  }\n\n  ngOnInit(): void {\n    this.newSketch();\n  }\n\n  openNav() {\n    document.getElementById(\"sidebar-nav\").style.width = \"350px\";\n    document.getElementById(\"main\").style.marginLeft = \"350px\";\n  }\n\n  /* Set the width of the sidebar to 0 and the left margin of the page content to 0 */\n  closeNav() {\n    document.getElementById(\"sidebar-nav\").style.width = \"0\";\n    document.getElementById(\"main\").style.marginLeft = \"0\";\n  }\n\n  private newSketch(): void {\n    const sketch = s => {\n      s.preload = () => {\n        this.activeFont = this.fonts[0];\n        this.arial = s.loadFont('assets/arial.ttf');\n        this.nastaleeq = s.loadFont('assets/kasheeda.ttf');\n        this.robotoBlack = s.loadFont('assets/Roboto-Black.ttf');\n        this.robotoMed = s.loadFont('assets/Roboto-Medium.ttf');\n        this.robotoThin = s.loadFont('assets/Roboto-Light.ttf');\n        this.lateef = s.loadFont('assets/lateef.ttf');\n      };\n\n      s.setup = () => {\n        this.defaultFont = s.textFont();\n        this.createCanvas(s);\n        this.createLayers(s);\n        this.createFilePicker(s);\n        s.rect(0, 0, s.width, s.height);\n        s.stroke(this.strokeColor);\n      };\n\n      s.draw = () => {\n        this.sketch = s;\n        this.colorRange(s);\n        switch (this.activeMode) {\n          case TextModes.STEERING: this.steeringText(s); break;\n          case DrawingModes.BRUSH_MODE: this.brushDrawing(s); break;\n          case DrawingModes.CIRCLE_MODE: this.circleDrawing(s); break;\n          case DrawingModes.TEXT_BRUSH: this.textBrush(s); break;\n          case DrawingModes.GRADIENT_LINE: this.makeGradientLine(s); break;\n          case DrawingModes.BEADS: this.beads(s); break;\n          case DrawingModes.CLEAR: this.clearBrushLayer(s); break;\n          case TextModes.ROTATE_FILL: this.rotateText(s); break;\n          case TextModes.HEADING_STYLE: this.heading(s); break;\n          case TextModes.STEERING: this.steeringText(s); break;\n          case TextModes.GENERATIVE: this.generativeLetter(s); break;\n          case TextModes.MOVE: this.moveText(s); break;\n          case TextModes.CLEAR: this.clearText(s); break;\n          case Background.GRADIENT: this.gradientBackground(s); break;\n          case Background.SOLID_FILL: this.fillBackground(s); break;\n          case Background.CIRCLE: this.circleBackground(s); break;\n          case Background.STRIPES: this.stripesBackground(s); break;\n          case Background.GRID_CIRCLE: this.circlesGridBackground(s); break;\n          case Background.LINES: this.linesBackground(s); break;\n          case Background.INPUT_IMAGE: this.showFilepicker(s); break;\n          case Background.CLEAR: this.clearBackground(s); break;\n          case FilterTypes.INVERT:\n          case FilterTypes.BLUR:\n          case FilterTypes.GRAY:\n          case FilterTypes.ERODE:\n          case FilterTypes.DILATE:\n          case FilterTypes.OPAQUE:\n          case FilterTypes.THRESHOLD:\n          case FilterTypes.POSTERIZE:\n            this.setFilter(s); break;\n          case FilterTypes.CLEAR: this.clearFilter(s); break;\n          case AnimatedModes.SQUARE: this.animateSquare(s); break;\n          case AnimatedModes.SPIRAL: this.spiral(s); break;\n          case AnimatedModes.CLEAR: this.clearAnimation(s); break;\n          case 'GAN': this.generateRunwayImage(s); break;\n        }\n      };\n    };\n    this.canvas = new p5(sketch);\n  }\n\n  // animated\n\n  private resetSpiralValues(): void {\n    this.angle = 2.0;\n    this.offset = 300;\n    this.scalar = 3.5;\n    this.speed = 0.1;\n    this.col = {\n      r: 255,\n      g: 0,\n      b: 0\n    };\n  }\n\n  animateSquare(s): void {\n    let lineWidth = this.animatedLayer.random(4, 50);\n    let squareSize = this.animatedLayer.random(5, this.CANVAS_WIDTH);\n    this.animatedLayer.rectMode(s.CENTER);\n    this.animatedLayer.strokeWeight(lineWidth);\n    this.animatedLayer.stroke(this.strokeColor);\n    this.animatedLayer.fill(this.secondaryColor);\n    this.animatedLayer.square(300, 300, squareSize);\n    s.image(this.animatedLayer, 0, 0);\n  }\n\n  spiral(s): void {\n    const hex = this.strokeColor.replace('#', '');\n    var bigint = parseInt(hex, 16);\n    var r = (bigint >> 16) & 255;\n    var g = (bigint >> 8) & 255;\n    var b = bigint & 255;\n    this.col.r = this.animatedLayer.random(0, r);\n    this.col.g = this.animatedLayer.random(0, g);\n    this.col.b = this.animatedLayer.random(100, b);\n    var x = this.offset + this.animatedLayer.cos(this.angle) * this.scalar;\n    var y = this.offset + this.animatedLayer.sin(this.angle) * this.scalar;\n    this.animatedLayer.fill(this.col.r, this.col.g, this.col.b);\n    this.animatedLayer.stroke(this.strokeColor);\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value;\n    this.animatedLayer.textSize(this.sizePicker);\n    this.animatedLayer.text(urduText, x, y);\n    // this.animatedLayer.ellipse(x, y, 5, 5);\n    this.angle += this.speed;\n    this.scalar += this.speed;\n    s.image(this.animatedLayer, 0, 0);\n  }\n\n\n  private clearAnimation(sketch: any): void {\n    this.animatedLayer.clear();\n    this.backgroundLayer.clear();\n    this.handleFile(null, sketch);\n    sketch.image(this.animatedLayer, 0, 0);\n    sketch.image(this.backgroundLayer, 0, 0);\n    sketch.rect(0, 0, sketch.width, sketch.height);\n    sketch.image(this.brushLayer, 0, 0);\n    sketch.image(this.textLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  // GAN\n  generateRunwayImage(s: any): void {\n    this.activeMode = null;\n    const model = new HostedModel({\n      url: \"https://landscapes-5774376f.hosted-models.runwayml.cloud/v1/\",\n      token: \"P/Hl6auSbVYmEqGiAbsJEg==\"\n    });\n\n    const z = [];\n    for (let i = 0; i < 512; i++) {\n      z[i] = Math.random();\n    }\n\n    const inputs = {\n      \"z\": z,\n      \"truncation\": 0.5\n    };\n    model.query(inputs).then(outputs => {\n      const { image } = outputs;\n      this.generatedImgBase64 = outputs.image;\n      let img = s.loadImage(this.generatedImgBase64);\n      setTimeout(() => {\n        s.background(img);\n      }, 1000)\n    });\n  }\n\n  private testRunway(): void {\n    const model = new HostedModel({\n      // url: \"https://skygan-68e3f677.hosted-models.runwayml.cloud/v1/\",\n      // token: \"b+aYpmRyZwom71wtdIwegg==\",\n      url: \"https://landscapes-5774376f.hosted-models.runwayml.cloud/v1/\",\n      token: \"P/Hl6auSbVYmEqGiAbsJEg==\"\n    });\n    //// You can use the info() method to see what type of input object the model expects\n    model.info().then(info => console.log(info));\n\n    const z = [];\n    for (let i = 0; i < 512; i++) {\n      z[i] = Math.random();\n    }\n\n    const inputs = {\n      \"z\": z,\n      \"truncation\": 0.5\n    };\n    model.query(inputs).then(outputs => {\n      const { image } = outputs;\n      this.generatedImgBase64 = outputs.image;\n      // use the outputs in your project\n      const imageElement = document.createElement('img');\n      imageElement.src = outputs.image;\n\n      console.log(this.generatedImgBase64);\n    });\n\n  }\n\n  // Canvas Options\n\n  clearCanvas(): void {\n    window.location.reload();\n  }\n\n  private createCanvas(sketch: any): void {\n    const backgroundCanvas = sketch.createCanvas(this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n    backgroundCanvas.parent('sketch-holder');\n    sketch.background(255);\n  }\n\n  private createLayers(sketch: any): void {\n    this.textLayer = sketch.createGraphics(this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n    this.textLayer.clear();\n    this.brushLayer = sketch.createGraphics(this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n    this.brushLayer.clear();\n    this.backgroundLayer = sketch.createGraphics(this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n    this.backgroundLayer.clear();\n    this.filterLayer = sketch.createGraphics(this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n    this.filterLayer.clear();\n    this.animatedLayer = sketch.createGraphics(this.CANVAS_WIDTH, this.CANVAS_HEIGHT);\n    this.animatedLayer.clear();\n  }\n\n  private updateLayers(sketch: any): void {\n    sketch.image(this.backgroundLayer, 0, 0);\n    sketch.image(this.filterLayer, 0, 0);\n    sketch.image(this.brushLayer, 0, 0);\n    sketch.image(this.textLayer, 0, 0);\n  }\n\n  // Brush Mode Functions\n\n  private clearBrushLayer(sketch: any): void {\n    this.brushLayer.clear();\n    sketch.image(this.brushLayer, 0, 0);\n    sketch.rect(0, 0, sketch.width, sketch.height);\n    sketch.image(this.backgroundLayer, 0, 0);\n    sketch.image(this.textLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  private brushDrawing(s: any): void {\n    if (s.mouseIsPressed) {\n      if (s.mouseButton === s.LEFT) {\n        this.brushLayer.stroke(this.strokeColor);\n        this.brushLayer.strokeWeight(this.sizePicker);\n        this.brushLayer.line(s.mouseX, s.mouseY, s.pmouseX, s.pmouseY);\n      } else if (s.mouseButton === s.CENTER) {\n        this.brushLayer.background(255);\n      }\n      this.updateLayers(s);\n    }\n  }\n\n  private circleDrawing(s: any): void {\n    if (s.mouseIsPressed) {\n      const speed = s.abs(s.mouseX, s.pmouseX) + s.abs(s.mouseY - s.pmouseY);\n      this.brushLayer.stroke(this.strokeColor);\n      this.brushLayer.strokeWeight(this.sizePicker);\n      this.brushLayer.ellipse(s.mouseX, s.mouseY, speed, speed);\n      this.updateLayers(s);\n    }\n  }\n\n  private textBrush(s: any): void {\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value.split(' ');\n    let distance = 0;\n    this.brushLayer.noStroke();\n    if (s.mouseIsPressed) {\n      for (let i = 0; i < urduText.length; i++) {\n        this.brushLayer.fill(this.strokeColor);\n        this.brushLayer.textSize(this.sizePicker);\n        this.brushLayer.text(urduText[i], s.mouseX, s.mouseY + distance + 3);\n        distance += this.sizePicker;\n        this.updateLayers(s);\n      }\n    }\n  }\n\n  private makeGradientLine(sketch): void {\n    this.brushLayer.noStroke();\n    this.colorRange(sketch);\n    this.gradientLine(0, 0, sketch.mouseX, sketch.mouseY, 50);\n    sketch.image(this.brushLayer, 0, 0);\n    if (sketch.mouseIsPressed){\n      this.activeMode = null;\n    }\n  }\n\n  private gradientLine(x1, y1, x2, y2, sz) {\n    const d = this.backgroundLayer.dist(x1, y1, x2, y2)\n    for (let i = 0; i < d; i++) {\n      const step = this.backgroundLayer.map(i, 0, d, 0, 1);\n      const x = this.backgroundLayer.lerp(x1, x2, step)\n      const y = this.backgroundLayer.lerp(y1, y2, step)\n      const c = this.backgroundLayer.lerpColor(this.colors.from, this.colors.to, step)\n      this.brushLayer.fill(c)\n      this.brushLayer.ellipse(x, y, sz, sz)\n    }\n  }\n\n  private beads(sketch) {\n    if (sketch.mouseIsPressed){\n    // set the color and brush style\n    this.brushLayer.fill(this.strokeColor);\n    this.brushLayer.noStroke();\n  \n    // find the distance between the current and previous mouse points\n    const distance = sketch.dist(sketch.mouseX, sketch.mouseY, sketch.pmouseX, sketch.pmouseY)\n  \n    // find the midpoint between the current and previous mouse points\n    const midX = (sketch.mouseX + sketch.pmouseX) / 2\n    const midY = (sketch.mouseY + sketch.pmouseY) / 2\n  \n    // draw a circle at the midpoint, with distance as its diameter\n    this.brushLayer.circle(midX, midY, distance);\n    sketch.image(this.brushLayer, 0, 0);\n    }\n  }\n\n  // Background Functions\n\n  private clearBackground(sketch: any): void {\n    this.backgroundLayer.clear();\n    this.handleFile(null, sketch);\n    sketch.image(this.backgroundLayer, 0, 0);\n    sketch.rect(0, 0, sketch.width, sketch.height);\n    sketch.image(this.brushLayer, 0, 0);\n    sketch.image(this.textLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  private circleBackground(sketch: any): void {\n    this.backgroundLayer.noStroke();\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value;\n    for (let i = 0; i < 1000; i++) {\n      const randomColor = this.getRandomColor();\n      this.backgroundLayer.fill(randomColor);\n      this.backgroundLayer.noStroke();\n      this.backgroundLayer.ellipse(sketch.random(this.CANVAS_WIDTH), sketch.random(this.CANVAS_HEIGHT), sketch.random(100));\n      this.backgroundLayer.stroke(this.secondaryColor);\n      this.backgroundLayer.textSize(this.sizePicker);\n      this.backgroundLayer.text(urduText, sketch.random(this.CANVAS_WIDTH), sketch.random(this.CANVAS_HEIGHT));\n    }\n    sketch.image(this.backgroundLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  private stripesBackground(sketch: any): void {\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value;\n    for (var s = 0; s < sketch.width; s = s + 1) {\n      const randomColor = this.getRandomColor();\n      this.backgroundLayer.fill(randomColor);\n      this.backgroundLayer.noStroke();\n      this.backgroundLayer.rect(s * 20, 0, 10, sketch.height);\n    }\n    sketch.image(this.backgroundLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  private colorRange(sketch: any): void {\n    this.colors.from = sketch.color(this.strokeColor);\n    this.colors.to = sketch.color(this.secondaryColor);\n    this.backgroundLayer.colorMode(sketch.RGB); // Try changing to HSB.\n    this.colors.interA = sketch.lerpColor(this.colors.from, this.colors.to, 0.33);\n    this.colors.interB = sketch.lerpColor(this.colors.from, this.colors.to, 0.66);\n  }\n\n  private linesBackground(sketch: any): void {\n    this.backgroundLayer.fill(this.secondaryColor);\n    this.backgroundLayer.stroke(this.strokeColor);\n    for (let x = 0; x <= this.CANVAS_WIDTH; x += 50)\n      for (let y = 0; y <= this.CANVAS_WIDTH; y += 50) {\n        this.backgroundLayer.line(x, y, this.CANVAS_WIDTH / 2, this.CANVAS_HEIGHT / 2);\n      }\n    sketch.image(this.backgroundLayer, 0, 0);\n  }\n\n\n  private circlesGridBackground(sketch: any): void {\n    this.backgroundLayer.fill(this.secondaryColor);\n    this.backgroundLayer.noFill();\n    this.backgroundLayer.stroke(this.strokeColor);\n    for (let x = 0; x <= this.CANVAS_WIDTH; x += 20)\n      for (let y = 0; y <= this.CANVAS_WIDTH; y += 20) {\n        this.backgroundLayer.ellipse(x, y, 100, 100);\n      }\n    sketch.image(this.backgroundLayer, 0, 0);\n  }\n\n\n  private fillBackground(sketch): void {\n    this.backgroundLayer.clear();\n    this.backgroundLayer.fill(this.secondaryColor);\n    this.backgroundLayer.rect(0, 0, sketch.width, sketch.height);\n    sketch.image(this.backgroundLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  private gradientBackground(sketch): void {\n    this.backgroundLayer.noFill();\n    for (var y = 0; y < this.CANVAS_HEIGHT; y++) {\n      var inter = this.textLayer.map(y, 0, this.CANVAS_HEIGHT, 0, 1);\n      var c = this.backgroundLayer.lerpColor(this.colors.from, this.colors.to, inter);\n      this.backgroundLayer.stroke(c);\n      this.backgroundLayer.line(0, y, this.CANVAS_WIDTH, y);\n    }\n    sketch.image(this.backgroundLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  // Text Functions\n\n  private moveText(sketch: any): void {\n    const oldText = this.textLayer;\n    // sketch.image(oldText.clear(),0,0);\n    sketch.image(this.textLayer, sketch.mouseX, sketch.mouseY);\n    // this.textLayer.clear();\n    // sketch.image(this.textLayer,0,0)\n  }\n\n  private clearText(sketch: any): void {\n    // this.inputText = '';\n    this.textLayer.clear();\n    sketch.image(this.textLayer, 0, 0);\n    sketch.rect(0, 0, sketch.width, sketch.height);\n    sketch.image(this.backgroundLayer, 0, 0);\n    sketch.image(this.brushLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  private setFont(): any {\n    let font;\n    switch (this.activeFont) {\n      case FontTypes.ARIAL: font = this.arial; break;\n      case FontTypes.NASTALEEQ: font = this.nastaleeq; break;\n      case FontTypes.LATEEF: font = this.lateef; break;\n      case FontTypes.ROBOTO_BLACK: font = this.robotoBlack; break;\n      case FontTypes.ROBOTO_MEDIUM: font = this.robotoMed; break;\n      case FontTypes.ROBOTO_THIN: font = this.robotoThin; break;\n      default: font = this.defaultFont; break;\n    }\n    return font;\n  }\n\n  private rotateText(sketch: any): void {\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value;\n    const reversedUrdu = this.reverseString(urduText);\n    const text = this.selectedLanguage === LanguageSupport.URDU ? reversedUrdu : this.inputText;\n    const font = this.setFont();\n    this.textLayer.textFont(font);\n    this.textLayer.stroke(this.strokeColor);\n    this.textLayer.textSize(this.sizePicker);\n    for (let i = 0; i < this.CANVAS_WIDTH; i++) {\n      this.textLayer.push();\n      this.textLayer.fill(this.strokeColor);\n      this.textLayer.translate(sketch.random(this.CANVAS_WIDTH), sketch.random(this.CANVAS_HEIGHT));\n      this.textLayer.rotate(sketch.random(2 * sketch.PI));\n      this.textLayer.text(text, this.CANVAS_WIDTH / 2, this.CANVAS_HEIGHT / 2);\n      this.textLayer.pop();\n    }\n    sketch.image(this.textLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n  private reverseString(str): string {\n    // Step 1. Use the split() method to return a new array\n    var splitString = str.split(\"\"); // var splitString = \"hello\".split(\"\");\n    // [\"h\", \"e\", \"l\", \"l\", \"o\"]\n\n    // Step 2. Use the reverse() method to reverse the new created array\n    var reverseArray = splitString.reverse(); // var reverseArray = [\"h\", \"e\", \"l\", \"l\", \"o\"].reverse();\n    // [\"o\", \"l\", \"l\", \"e\", \"h\"]\n\n    // Step 3. Use the join() method to join all elements of the array into a string\n    var joinArray = reverseArray.join(\"\"); // var joinArray = [\"o\", \"l\", \"l\", \"e\", \"h\"].join(\"\");\n    // \"olleh\"\n\n    //Step 4. Return the reversed string\n    return joinArray; // \"olleh\"\n  }\n\n  private heading(sketch: any): void {\n    const font = this.selectedLanguage === LanguageSupport.URDU ? this.defaultFont : this.setFont();\n    this.textLayer.textFont(font);\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value;\n    const text = this.selectedLanguage === LanguageSupport.URDU ? urduText : this.inputText;\n    this.textLayer.stroke(this.secondaryColor);\n    this.textLayer.strokeWeight(5);\n    this.textLayer.textSize(this.sizePicker);\n    this.textLayer.textAlign(this.selectedTextAlign, this.selectedTextAlign);\n    this.textLayer.fill(this.strokeColor);\n    if (sketch.mouseIsPressed){\n      this.textLayer.text(text, sketch.mouseX, sketch.mouseY);\n      sketch.image(this.textLayer, 0, 0);\n      this.activeMode = null;\n    }\n  }\n\n  private steeringText(sketch: any): void {\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value;\n    const reversedUrdu = this.reverseString(urduText);\n    const text = this.selectedLanguage === LanguageSupport.URDU ? reversedUrdu : this.inputText;\n    if (this.activeFont === FontTypes.DEFAULT){\n      this.activeFont = FontTypes.ARIAL;\n    }\n    const font = this.setFont();\n    const points = font.textToPoints(text, sketch.mouseX, sketch.mouseY, this.sizePicker, {\n      sampleFactor: 0.25\n    });\n    if (sketch.mouseIsPressed) {\n      for (var i = 0; i < points.length; i++) {\n        const pt = points[i];\n        this.textLayer.stroke(this.strokeColor);\n        this.textLayer.strokeWeight(1);\n        this.textLayer.ellipse(pt.x, pt.y, 5, 5);\n      }\n    }\n    sketch.image(this.textLayer, 0, 0);\n    // this.activeMode = null;\n  }\n\n  onLanguageClick(language: LanguageSupport): void {\n    this.selectedLanguage = language;\n    this.inputText = '';\n    switch (language) {\n      case LanguageSupport.URDU: document.getElementById('txtBox').style.display = 'block'; break;\n      // case LanguageSupport.ENGLISH: document.getElementById('txtBox').style.display = 'none'; break;\n    }\n  }\n\n  onAlignClick(align: TextAlignModes): void {\n    this.selectedTextAlign = align;\n  }\n\n  private generativeLetter(sketch: any): void {\n    this.textLayer.background(this.secondaryColor);\n    this.textLayer.translate(100, this.textLayer.height * 0.75);\n    const pathSampleFactor = 0.1 * this.textLayer.pow(0.02, this.textLayer.mouseX / this.textLayer.width);\n    const ribbonWidth = this.textLayer.map(this.textLayer.mouseY, 0, this.textLayer.height, 1, 200);\n\n    const urduText = (document.getElementById('txtBox') as HTMLInputElement).value;\n    const text = this.selectedLanguage === LanguageSupport.URDU ? urduText : this.inputText;\n    let letters = text;\n    const font = this.setFont();\n    for (var i = 0; i < letters.length; i++) {\n      var path = font.textToPoints(letters[0], 50, 50, this.sizePicker, { sampleFactor: pathSampleFactor });\n      this.textLayer.stroke(this.strokeColor);\n      let density = 0.1;\n      for (var d = 0; d < ribbonWidth; d += density) {\n        this.textLayer.beginShape();\n\n        for (var i = 0; i < path.length; i++) {\n          var pos = path[i];\n          var nextPos = path[i + 1];\n\n          if (nextPos) {\n            var p0 = this.textLayer.createVector(pos.x, pos.y);\n            var p1 = this.textLayer.createVector(nextPos.x, nextPos.y);\n            var v = p5.Vector.sub(p1, p0);\n            v.normalize();\n            v.rotate(this.textLayer.HALF_PI);\n            v.mult(d);\n            var pneu = p5.Vector.add(p0, v);\n            this.textLayer.curveVertex(pneu.x, pneu.y);\n          }\n        }\n        this.textLayer.endShape(this.textLayer.CLOSE);\n      }\n    }\n    sketch.image(this.textLayer, 0, 0);\n    // this.activeMode = null;\n  }\n\n  // Helper Functions\n\n  private createFilePicker(sketch: any): void {\n    // const label = sketch.text('Background Image: ',sketch.windowWidth-400,20);\n    this.fileInput = sketch.createFileInput(($event) => this.handleFile($event, sketch));\n  }\n\n  showFilepicker(s): void {\n    this.fileInput.show();\n    this.fileInput.position(s.windowWidth - 300, 30);\n  }\n\n  hideFilepicker(): void {\n    this.fileInput.hide();\n  }\n\n  handleFile(file, sketch?): void {\n    if (!file || file === null) {\n      this.fileInput.value = null;\n    }\n    if (file?.type === 'image') {\n      let img = this.sketch.loadImage(file.data);\n      setTimeout(() => {\n        this.backgroundLayer.background(img);\n        this.sketch.image(this.backgroundLayer, 0, 0);\n      }, 1000)\n    }\n  }\n\n  private getRandomColor(): any {\n    const randomColor = this.backgroundLayer.random(4);\n    let color: any;\n    if (randomColor > 3) color = this.colors.from;\n    if (randomColor > 2 && randomColor < 3) color = this.colors.to;\n    if (randomColor > 1 && randomColor < 2) color = this.colors.interA;\n    if (randomColor > 0 && randomColor < 1) color = this.colors.interB;\n    return color;\n  }\n\n  saveImage(mode: ExportModes = ExportModes.JPEG): void {\n    this.canvas.save(`design${mode}`);\n  }\n\n  setActiveMode(mode: DrawingModes | Background | TextModes | 'GAN' | FilterTypes | OtherModes, $event?): void {\n    this.activeMode = mode;\n    this.resetSpiralValues();\n    if (this.activeMode !== Background.INPUT_IMAGE) {\n      this.hideFilepicker();\n    }\n  }\n\n  shareImage(media: 'facebook' | 'twitter' = 'facebook'): any {\n    let searchParams = new URLSearchParams();\n    let navUrl;\n    switch (media) {\n      case 'facebook':\n        searchParams.set('u', this.shareUrl);\n        navUrl = 'https://www.facebook.com/sharer/sharer.php?' + searchParams;\n        break;\n      case 'twitter': searchParams.set('url', this.shareUrl);\n        navUrl = 'https://twitter.com/share?' + searchParams;\n        break;\n    }\n    return window.open(navUrl, \"_blank\");\n  }\n\n  onNewDesignClick(type?): void {\n    if (type === 'A4') {\n      this.CANVAS_WIDTH = 595;\n      this.CANVAS_HEIGHT = 842;\n    }\n    this.canvas.remove();\n    this.showNewOptions = false;\n    this.newSketch();\n  }\n\n\n  // Filter Options\n\n  private clearFilter(sketch: any): void {\n    this.filterLayer.clear();\n    sketch.image(this.filterLayer, 0, 0);\n    sketch.image(this.backgroundLayer, 0, 0);\n    sketch.image(this.brushLayer, 0, 0);\n    sketch.image(this.textLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n\n  private setFilter(sketch): void {\n    let filter;\n    switch (this.activeMode) {\n      case FilterTypes.BLUR: filter = sketch.BLUR; break;\n      case FilterTypes.GRAY: filter = sketch.GRAY; break;\n      case FilterTypes.INVERT: filter = sketch.INVERT; break;\n      case FilterTypes.ERODE: filter = sketch.ERODE; break;\n      case FilterTypes.DILATE: filter = sketch.DILATE; break;\n      case FilterTypes.OPAQUE: filter = sketch.OPAQUE; break;\n      case FilterTypes.THRESHOLD: filter = sketch.THRESHOLD; break;\n      case FilterTypes.POSTERIZE: filter = sketch.POSTERIZE; break;\n    }\n    this.filterLayer.image(sketch, 0, 0);\n    if (this.activeMode === FilterTypes.BLUR || this.activeMode === FilterTypes.THRESHOLD) {\n      this.filterLayer.filter(filter, this.sizePicker);\n    }\n    else {\n      this.filterLayer.filter(filter);\n    }\n    sketch.image(this.filterLayer, 0, 0);\n    this.activeMode = null;\n  }\n\n\n  public get drawingModes(): typeof DrawingModes { return DrawingModes; }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"./../../../../assets/images/404-error-template.png\" style=\"width: 100%;\">","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ga-pad';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SketchPadComponent } from './modules/sketch-pad/sketch-pad.component';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\nimport { FormsModule } from '@angular/forms';\n// import { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SketchPadComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    // MatDialogModule,\n    // MatDialogRef,\n    NgbModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}